-----------------------------------------------------------------------------
Info file generated by Happy Version 2.1.3 from Parser.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_calc -> Program                             (0)
	Program -> FunctionList MainBlock                  (1)
	Program -> MainBlock                               (2)
	FunctionList -> FunctionList Function              (3)
	FunctionList -> Function                           (4)
	Function -> ReturnType Name '(' DeclParameterList ')' MainBlock   (5)
	Function -> ReturnType Name '(' ')' MainBlock      (6)
	ReturnType -> Tipo                                 (7)
	ReturnType -> 'void'                               (8)
	DeclParameterList -> DeclParameterList ',' DeclParameter   (9)
	DeclParameterList -> DeclParameter                 (10)
	DeclParameter -> Tipo Name                         (11)
	MainBlock -> '{' DeclarationList CommandList '}'   (12)
	MainBlock -> '{' CommandList '}'                   (13)
	DeclarationList -> DeclarationList Declaration     (14)
	DeclarationList -> Declaration                     (15)
	Declaration -> Tipo NameList ';'                   (16)
	Tipo -> 'int'                                      (17)
	Tipo -> 'double'                                   (18)
	Tipo -> 'string'                                   (19)
	NameList -> NameList ',' Name                      (20)
	NameList -> Name                                   (21)
	Block -> '{' CommandList '}'                       (22)
	CommandList -> CommandList Command                 (23)
	CommandList -> Command                             (24)
	Command -> IfCommand                               (25)
	Command -> WhileCommand                            (26)
	Command -> AttribCommand                           (27)
	Command -> WriteCommand                            (28)
	Command -> ReadCommand                             (29)
	Command -> ProcCall                                (30)
	Command -> Return                                  (31)
	Return -> 'return' AritExpr ';'                    (32)
	Return -> 'return' Literal ';'                     (33)
	Return -> 'return' ';'                             (34)
	IfCommand -> 'if' '(' LogicalExpr ')' Block        (35)
	IfCommand -> 'if' '(' LogicalExpr ')' Block 'else' Block   (36)
	WhileCommand -> 'while' '(' LogicalExpr ')' Block   (37)
	AttribCommand -> Name '=' AritExpr ';'             (38)
	AttribCommand -> Name '=' Literal ';'              (39)
	WriteCommand -> 'print' '(' AritExpr ')' ';'       (40)
	WriteCommand -> 'print' '(' Literal ')' ';'        (41)
	ReadCommand -> 'read' '(' Name ')' ';'             (42)
	ProcCall -> FunctionCall ';'                       (43)
	FunctionCall -> Name '(' FunctionParameterList ')'   (44)
	FunctionCall -> Name '(' ')'                       (45)
	FunctionParameterList -> FunctionParameterList ',' AritExpr   (46)
	FunctionParameterList -> AritExpr                  (47)
	FunctionParameterList -> FunctionParameterList ',' Literal   (48)
	FunctionParameterList -> Literal                   (49)
	LogicalExpr -> LogicalExpr '||' LogicalTerm        (50)
	LogicalExpr -> LogicalExpr '&&' LogicalTerm        (51)
	LogicalExpr -> LogicalTerm                         (52)
	LogicalTerm -> LogicalFactor                       (53)
	LogicalTerm -> '!' LogicalTerm                     (54)
	LogicalFactor -> '(' LogicalExpr ')'               (55)
	LogicalFactor -> RelationalExpr                    (56)
	RelationalExpr -> AritExpr '>' AritExpr            (57)
	RelationalExpr -> AritExpr '>=' AritExpr           (58)
	RelationalExpr -> AritExpr '<' AritExpr            (59)
	RelationalExpr -> AritExpr '<=' AritExpr           (60)
	RelationalExpr -> AritExpr '==' AritExpr           (61)
	RelationalExpr -> AritExpr '!=' AritExpr           (62)
	AritExpr -> AritExpr '+' Term                      (63)
	AritExpr -> AritExpr '-' Term                      (64)
	AritExpr -> Term                                   (65)
	Term -> Term '*' Factor                            (66)
	Term -> Term '/' Factor                            (67)
	Term -> Factor                                     (68)
	Factor -> Int                                      (69)
	Factor -> Double                                   (70)
	Factor -> Name                                     (71)
	Factor -> FunctionCall                             (72)
	Factor -> '(' AritExpr ')'                         (73)
	Factor -> '-' Factor                               (74)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'+'            { ADD }
	'-'            { SUB }
	'*'            { MUL }
	'/'            { DIV }
	'('            { LPAR }
	')'            { RPAR }
	'{'            { LBRA }
	'}'            { RBRA }
	'&&'           { AND }
	'||'           { OR }
	'>'            { GTH }
	'>='           { GEQTH }
	'<'            { LTH }
	'<='           { LEQTH }
	'!'            { NOT }
	'=='           { EQU }
	'!='           { DIFF }
	'if'           { IF }
	'else'         { ELSE }
	'while'        { WHILE }
	'read'         { READ }
	'print'        { PRINT }
	'return'       { RETURN }
	','            { COMMA }
	';'            { SEMI }
	'int'          { TINT }
	'double'       { TDOUBLE }
	'string'       { TSTRING }
	'void'         { TVOID }
	'='            { ASSIGN }
	Int            { CINT $$ }
	Double         { CDOUBLE $$ }
	Literal        { CLITERAL $$ }
	Name           { ID $$ }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_calc     rule  0
	Program         rules 1, 2
	FunctionList    rules 3, 4
	Function        rules 5, 6
	ReturnType      rules 7, 8
	DeclParameterList rules 9, 10
	DeclParameter   rule  11
	MainBlock       rules 12, 13
	DeclarationList rules 14, 15
	Declaration     rule  16
	Tipo            rules 17, 18, 19
	NameList        rules 20, 21
	Block           rule  22
	CommandList     rules 23, 24
	Command         rules 25, 26, 27, 28, 29, 30, 31
	Return          rules 32, 33, 34
	IfCommand       rules 35, 36
	WhileCommand    rule  37
	AttribCommand   rules 38, 39
	WriteCommand    rules 40, 41
	ReadCommand     rule  42
	ProcCall        rule  43
	FunctionCall    rules 44, 45
	FunctionParameterList rules 46, 47, 48, 49
	LogicalExpr     rules 50, 51, 52
	LogicalTerm     rules 53, 54
	LogicalFactor   rules 55, 56
	RelationalExpr  rules 57, 58, 59, 60, 61, 62
	AritExpr        rules 63, 64, 65
	Term            rules 66, 67, 68
	Factor          rules 69, 70, 71, 72, 73, 74

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_calc -> . Program                            (rule 0)

	'{'            shift, and enter state 12
	'int'          shift, and enter state 6
	'double'       shift, and enter state 7
	'string'       shift, and enter state 8
	'void'         shift, and enter state 9

	Program        goto state 10
	FunctionList   goto state 2
	Function       goto state 3
	ReturnType     goto state 4
	MainBlock      goto state 11
	Tipo           goto state 5

State 1

	Program -> . FunctionList MainBlock                 (rule 1)

	'int'          shift, and enter state 6
	'double'       shift, and enter state 7
	'string'       shift, and enter state 8
	'void'         shift, and enter state 9

	FunctionList   goto state 2
	Function       goto state 3
	ReturnType     goto state 4
	Tipo           goto state 5

State 2

	Program -> FunctionList . MainBlock                 (rule 1)
	FunctionList -> FunctionList . Function             (rule 3)

	'{'            shift, and enter state 12
	'int'          shift, and enter state 6
	'double'       shift, and enter state 7
	'string'       shift, and enter state 8
	'void'         shift, and enter state 9

	Function       goto state 33
	ReturnType     goto state 4
	MainBlock      goto state 34
	Tipo           goto state 5

State 3

	FunctionList -> Function .                          (rule 4)

	'{'            reduce using rule 4
	'int'          reduce using rule 4
	'double'       reduce using rule 4
	'string'       reduce using rule 4
	'void'         reduce using rule 4


State 4

	Function -> ReturnType . Name '(' DeclParameterList ')' MainBlock    (rule 5)
	Function -> ReturnType . Name '(' ')' MainBlock     (rule 6)

	Name           shift, and enter state 32


State 5

	ReturnType -> Tipo .                                (rule 7)

	Name           reduce using rule 7


State 6

	Tipo -> 'int' .                                     (rule 17)

	Name           reduce using rule 17


State 7

	Tipo -> 'double' .                                  (rule 18)

	Name           reduce using rule 18


State 8

	Tipo -> 'string' .                                  (rule 19)

	Name           reduce using rule 19


State 9

	ReturnType -> 'void' .                              (rule 8)

	Name           reduce using rule 8


State 10

	%start_calc -> Program .                            (rule 0)

	%eof           accept


State 11

	Program -> MainBlock .                              (rule 2)

	%eof           reduce using rule 2


State 12

	MainBlock -> '{' . DeclarationList CommandList '}'    (rule 12)
	MainBlock -> '{' . CommandList '}'                  (rule 13)

	'if'           shift, and enter state 26
	'while'        shift, and enter state 27
	'read'         shift, and enter state 28
	'print'        shift, and enter state 29
	'return'       shift, and enter state 30
	'int'          shift, and enter state 6
	'double'       shift, and enter state 7
	'string'       shift, and enter state 8
	Name           shift, and enter state 31

	DeclarationListgoto state 13
	Declaration    goto state 14
	Tipo           goto state 15
	CommandList    goto state 16
	Command        goto state 17
	Return         goto state 18
	IfCommand      goto state 19
	WhileCommand   goto state 20
	AttribCommand  goto state 21
	WriteCommand   goto state 22
	ReadCommand    goto state 23
	ProcCall       goto state 24
	FunctionCall   goto state 25

State 13

	MainBlock -> '{' DeclarationList . CommandList '}'    (rule 12)
	DeclarationList -> DeclarationList . Declaration    (rule 14)

	'if'           shift, and enter state 26
	'while'        shift, and enter state 27
	'read'         shift, and enter state 28
	'print'        shift, and enter state 29
	'return'       shift, and enter state 30
	'int'          shift, and enter state 6
	'double'       shift, and enter state 7
	'string'       shift, and enter state 8
	Name           shift, and enter state 31

	Declaration    goto state 58
	Tipo           goto state 15
	CommandList    goto state 59
	Command        goto state 17
	Return         goto state 18
	IfCommand      goto state 19
	WhileCommand   goto state 20
	AttribCommand  goto state 21
	WriteCommand   goto state 22
	ReadCommand    goto state 23
	ProcCall       goto state 24
	FunctionCall   goto state 25

State 14

	DeclarationList -> Declaration .                    (rule 15)

	'if'           reduce using rule 15
	'while'        reduce using rule 15
	'read'         reduce using rule 15
	'print'        reduce using rule 15
	'return'       reduce using rule 15
	'int'          reduce using rule 15
	'double'       reduce using rule 15
	'string'       reduce using rule 15
	Name           reduce using rule 15


State 15

	Declaration -> Tipo . NameList ';'                  (rule 16)

	Name           shift, and enter state 57

	NameList       goto state 56

State 16

	MainBlock -> '{' CommandList . '}'                  (rule 13)
	CommandList -> CommandList . Command                (rule 23)

	'}'            shift, and enter state 55
	'if'           shift, and enter state 26
	'while'        shift, and enter state 27
	'read'         shift, and enter state 28
	'print'        shift, and enter state 29
	'return'       shift, and enter state 30
	Name           shift, and enter state 31

	Command        goto state 54
	Return         goto state 18
	IfCommand      goto state 19
	WhileCommand   goto state 20
	AttribCommand  goto state 21
	WriteCommand   goto state 22
	ReadCommand    goto state 23
	ProcCall       goto state 24
	FunctionCall   goto state 25

State 17

	CommandList -> Command .                            (rule 24)

	'}'            reduce using rule 24
	'if'           reduce using rule 24
	'while'        reduce using rule 24
	'read'         reduce using rule 24
	'print'        reduce using rule 24
	'return'       reduce using rule 24
	Name           reduce using rule 24


State 18

	Command -> Return .                                 (rule 31)

	'}'            reduce using rule 31
	'if'           reduce using rule 31
	'while'        reduce using rule 31
	'read'         reduce using rule 31
	'print'        reduce using rule 31
	'return'       reduce using rule 31
	Name           reduce using rule 31


State 19

	Command -> IfCommand .                              (rule 25)

	'}'            reduce using rule 25
	'if'           reduce using rule 25
	'while'        reduce using rule 25
	'read'         reduce using rule 25
	'print'        reduce using rule 25
	'return'       reduce using rule 25
	Name           reduce using rule 25


State 20

	Command -> WhileCommand .                           (rule 26)

	'}'            reduce using rule 26
	'if'           reduce using rule 26
	'while'        reduce using rule 26
	'read'         reduce using rule 26
	'print'        reduce using rule 26
	'return'       reduce using rule 26
	Name           reduce using rule 26


State 21

	Command -> AttribCommand .                          (rule 27)

	'}'            reduce using rule 27
	'if'           reduce using rule 27
	'while'        reduce using rule 27
	'read'         reduce using rule 27
	'print'        reduce using rule 27
	'return'       reduce using rule 27
	Name           reduce using rule 27


State 22

	Command -> WriteCommand .                           (rule 28)

	'}'            reduce using rule 28
	'if'           reduce using rule 28
	'while'        reduce using rule 28
	'read'         reduce using rule 28
	'print'        reduce using rule 28
	'return'       reduce using rule 28
	Name           reduce using rule 28


State 23

	Command -> ReadCommand .                            (rule 29)

	'}'            reduce using rule 29
	'if'           reduce using rule 29
	'while'        reduce using rule 29
	'read'         reduce using rule 29
	'print'        reduce using rule 29
	'return'       reduce using rule 29
	Name           reduce using rule 29


State 24

	Command -> ProcCall .                               (rule 30)

	'}'            reduce using rule 30
	'if'           reduce using rule 30
	'while'        reduce using rule 30
	'read'         reduce using rule 30
	'print'        reduce using rule 30
	'return'       reduce using rule 30
	Name           reduce using rule 30


State 25

	ProcCall -> FunctionCall . ';'                      (rule 43)

	';'            shift, and enter state 53


State 26

	IfCommand -> 'if' . '(' LogicalExpr ')' Block       (rule 35)
	IfCommand -> 'if' . '(' LogicalExpr ')' Block 'else' Block    (rule 36)

	'('            shift, and enter state 52


State 27

	WhileCommand -> 'while' . '(' LogicalExpr ')' Block    (rule 37)

	'('            shift, and enter state 51


State 28

	ReadCommand -> 'read' . '(' Name ')' ';'            (rule 42)

	'('            shift, and enter state 50


State 29

	WriteCommand -> 'print' . '(' AritExpr ')' ';'      (rule 40)
	WriteCommand -> 'print' . '(' Literal ')' ';'       (rule 41)

	'('            shift, and enter state 49


State 30

	Return -> 'return' . AritExpr ';'                   (rule 32)
	Return -> 'return' . Literal ';'                    (rule 33)
	Return -> 'return' . ';'                            (rule 34)

	'-'            shift, and enter state 42
	'('            shift, and enter state 43
	';'            shift, and enter state 44
	Int            shift, and enter state 45
	Double         shift, and enter state 46
	Literal        shift, and enter state 47
	Name           shift, and enter state 48

	FunctionCall   goto state 38
	AritExpr       goto state 39
	Term           goto state 40
	Factor         goto state 41

State 31

	AttribCommand -> Name . '=' AritExpr ';'            (rule 38)
	AttribCommand -> Name . '=' Literal ';'             (rule 39)
	FunctionCall -> Name . '(' FunctionParameterList ')'    (rule 44)
	FunctionCall -> Name . '(' ')'                      (rule 45)

	'('            shift, and enter state 36
	'='            shift, and enter state 37


State 32

	Function -> ReturnType Name . '(' DeclParameterList ')' MainBlock    (rule 5)
	Function -> ReturnType Name . '(' ')' MainBlock     (rule 6)

	'('            shift, and enter state 35


State 33

	FunctionList -> FunctionList Function .             (rule 3)

	'{'            reduce using rule 3
	'int'          reduce using rule 3
	'double'       reduce using rule 3
	'string'       reduce using rule 3
	'void'         reduce using rule 3


State 34

	Program -> FunctionList MainBlock .                 (rule 1)

	%eof           reduce using rule 1


State 35

	Function -> ReturnType Name '(' . DeclParameterList ')' MainBlock    (rule 5)
	Function -> ReturnType Name '(' . ')' MainBlock     (rule 6)

	')'            shift, and enter state 91
	'int'          shift, and enter state 6
	'double'       shift, and enter state 7
	'string'       shift, and enter state 8

	DeclParameterListgoto state 88
	DeclParameter  goto state 89
	Tipo           goto state 90

State 36

	FunctionCall -> Name '(' . FunctionParameterList ')'    (rule 44)
	FunctionCall -> Name '(' . ')'                      (rule 45)

	'-'            shift, and enter state 42
	'('            shift, and enter state 43
	')'            shift, and enter state 86
	Int            shift, and enter state 45
	Double         shift, and enter state 46
	Literal        shift, and enter state 87
	Name           shift, and enter state 48

	FunctionCall   goto state 38
	FunctionParameterListgoto state 84
	AritExpr       goto state 85
	Term           goto state 40
	Factor         goto state 41

State 37

	AttribCommand -> Name '=' . AritExpr ';'            (rule 38)
	AttribCommand -> Name '=' . Literal ';'             (rule 39)

	'-'            shift, and enter state 42
	'('            shift, and enter state 43
	Int            shift, and enter state 45
	Double         shift, and enter state 46
	Literal        shift, and enter state 83
	Name           shift, and enter state 48

	FunctionCall   goto state 38
	AritExpr       goto state 82
	Term           goto state 40
	Factor         goto state 41

State 38

	Factor -> FunctionCall .                            (rule 72)

	'+'            reduce using rule 72
	'-'            reduce using rule 72
	'*'            reduce using rule 72
	'/'            reduce using rule 72
	')'            reduce using rule 72
	'&&'           reduce using rule 72
	'||'           reduce using rule 72
	'>'            reduce using rule 72
	'>='           reduce using rule 72
	'<'            reduce using rule 72
	'<='           reduce using rule 72
	'=='           reduce using rule 72
	'!='           reduce using rule 72
	','            reduce using rule 72
	';'            reduce using rule 72


State 39

	Return -> 'return' AritExpr . ';'                   (rule 32)
	AritExpr -> AritExpr . '+' Term                     (rule 63)
	AritExpr -> AritExpr . '-' Term                     (rule 64)

	'+'            shift, and enter state 79
	'-'            shift, and enter state 80
	';'            shift, and enter state 81


State 40

	AritExpr -> Term .                                  (rule 65)
	Term -> Term . '*' Factor                           (rule 66)
	Term -> Term . '/' Factor                           (rule 67)

	'+'            reduce using rule 65
	'-'            reduce using rule 65
	'*'            shift, and enter state 77
	'/'            shift, and enter state 78
	')'            reduce using rule 65
	'&&'           reduce using rule 65
	'||'           reduce using rule 65
	'>'            reduce using rule 65
	'>='           reduce using rule 65
	'<'            reduce using rule 65
	'<='           reduce using rule 65
	'=='           reduce using rule 65
	'!='           reduce using rule 65
	','            reduce using rule 65
	';'            reduce using rule 65


State 41

	Term -> Factor .                                    (rule 68)

	'+'            reduce using rule 68
	'-'            reduce using rule 68
	'*'            reduce using rule 68
	'/'            reduce using rule 68
	')'            reduce using rule 68
	'&&'           reduce using rule 68
	'||'           reduce using rule 68
	'>'            reduce using rule 68
	'>='           reduce using rule 68
	'<'            reduce using rule 68
	'<='           reduce using rule 68
	'=='           reduce using rule 68
	'!='           reduce using rule 68
	','            reduce using rule 68
	';'            reduce using rule 68


State 42

	Factor -> '-' . Factor                              (rule 74)

	'-'            shift, and enter state 42
	'('            shift, and enter state 43
	Int            shift, and enter state 45
	Double         shift, and enter state 46
	Name           shift, and enter state 48

	FunctionCall   goto state 38
	Factor         goto state 76

State 43

	Factor -> '(' . AritExpr ')'                        (rule 73)

	'-'            shift, and enter state 42
	'('            shift, and enter state 43
	Int            shift, and enter state 45
	Double         shift, and enter state 46
	Name           shift, and enter state 48

	FunctionCall   goto state 38
	AritExpr       goto state 75
	Term           goto state 40
	Factor         goto state 41

State 44

	Return -> 'return' ';' .                            (rule 34)

	'}'            reduce using rule 34
	'if'           reduce using rule 34
	'while'        reduce using rule 34
	'read'         reduce using rule 34
	'print'        reduce using rule 34
	'return'       reduce using rule 34
	Name           reduce using rule 34


State 45

	Factor -> Int .                                     (rule 69)

	'+'            reduce using rule 69
	'-'            reduce using rule 69
	'*'            reduce using rule 69
	'/'            reduce using rule 69
	')'            reduce using rule 69
	'&&'           reduce using rule 69
	'||'           reduce using rule 69
	'>'            reduce using rule 69
	'>='           reduce using rule 69
	'<'            reduce using rule 69
	'<='           reduce using rule 69
	'=='           reduce using rule 69
	'!='           reduce using rule 69
	','            reduce using rule 69
	';'            reduce using rule 69


State 46

	Factor -> Double .                                  (rule 70)

	'+'            reduce using rule 70
	'-'            reduce using rule 70
	'*'            reduce using rule 70
	'/'            reduce using rule 70
	')'            reduce using rule 70
	'&&'           reduce using rule 70
	'||'           reduce using rule 70
	'>'            reduce using rule 70
	'>='           reduce using rule 70
	'<'            reduce using rule 70
	'<='           reduce using rule 70
	'=='           reduce using rule 70
	'!='           reduce using rule 70
	','            reduce using rule 70
	';'            reduce using rule 70


State 47

	Return -> 'return' Literal . ';'                    (rule 33)

	';'            shift, and enter state 74


State 48

	FunctionCall -> Name . '(' FunctionParameterList ')'    (rule 44)
	FunctionCall -> Name . '(' ')'                      (rule 45)
	Factor -> Name .                                    (rule 71)

	'+'            reduce using rule 71
	'-'            reduce using rule 71
	'*'            reduce using rule 71
	'/'            reduce using rule 71
	'('            shift, and enter state 36
	')'            reduce using rule 71
	'&&'           reduce using rule 71
	'||'           reduce using rule 71
	'>'            reduce using rule 71
	'>='           reduce using rule 71
	'<'            reduce using rule 71
	'<='           reduce using rule 71
	'=='           reduce using rule 71
	'!='           reduce using rule 71
	','            reduce using rule 71
	';'            reduce using rule 71


State 49

	WriteCommand -> 'print' '(' . AritExpr ')' ';'      (rule 40)
	WriteCommand -> 'print' '(' . Literal ')' ';'       (rule 41)

	'-'            shift, and enter state 42
	'('            shift, and enter state 43
	Int            shift, and enter state 45
	Double         shift, and enter state 46
	Literal        shift, and enter state 73
	Name           shift, and enter state 48

	FunctionCall   goto state 38
	AritExpr       goto state 72
	Term           goto state 40
	Factor         goto state 41

State 50

	ReadCommand -> 'read' '(' . Name ')' ';'            (rule 42)

	Name           shift, and enter state 71


State 51

	WhileCommand -> 'while' '(' . LogicalExpr ')' Block    (rule 37)

	'-'            shift, and enter state 42
	'('            shift, and enter state 68
	'!'            shift, and enter state 69
	Int            shift, and enter state 45
	Double         shift, and enter state 46
	Name           shift, and enter state 48

	FunctionCall   goto state 38
	LogicalExpr    goto state 70
	LogicalTerm    goto state 64
	LogicalFactor  goto state 65
	RelationalExpr goto state 66
	AritExpr       goto state 67
	Term           goto state 40
	Factor         goto state 41

State 52

	IfCommand -> 'if' '(' . LogicalExpr ')' Block       (rule 35)
	IfCommand -> 'if' '(' . LogicalExpr ')' Block 'else' Block    (rule 36)

	'-'            shift, and enter state 42
	'('            shift, and enter state 68
	'!'            shift, and enter state 69
	Int            shift, and enter state 45
	Double         shift, and enter state 46
	Name           shift, and enter state 48

	FunctionCall   goto state 38
	LogicalExpr    goto state 63
	LogicalTerm    goto state 64
	LogicalFactor  goto state 65
	RelationalExpr goto state 66
	AritExpr       goto state 67
	Term           goto state 40
	Factor         goto state 41

State 53

	ProcCall -> FunctionCall ';' .                      (rule 43)

	'}'            reduce using rule 43
	'if'           reduce using rule 43
	'while'        reduce using rule 43
	'read'         reduce using rule 43
	'print'        reduce using rule 43
	'return'       reduce using rule 43
	Name           reduce using rule 43


State 54

	CommandList -> CommandList Command .                (rule 23)

	'}'            reduce using rule 23
	'if'           reduce using rule 23
	'while'        reduce using rule 23
	'read'         reduce using rule 23
	'print'        reduce using rule 23
	'return'       reduce using rule 23
	Name           reduce using rule 23


State 55

	MainBlock -> '{' CommandList '}' .                  (rule 13)

	'{'            reduce using rule 13
	'int'          reduce using rule 13
	'double'       reduce using rule 13
	'string'       reduce using rule 13
	'void'         reduce using rule 13
	%eof           reduce using rule 13


State 56

	Declaration -> Tipo NameList . ';'                  (rule 16)
	NameList -> NameList . ',' Name                     (rule 20)

	','            shift, and enter state 61
	';'            shift, and enter state 62


State 57

	NameList -> Name .                                  (rule 21)

	','            reduce using rule 21
	';'            reduce using rule 21


State 58

	DeclarationList -> DeclarationList Declaration .    (rule 14)

	'if'           reduce using rule 14
	'while'        reduce using rule 14
	'read'         reduce using rule 14
	'print'        reduce using rule 14
	'return'       reduce using rule 14
	'int'          reduce using rule 14
	'double'       reduce using rule 14
	'string'       reduce using rule 14
	Name           reduce using rule 14


State 59

	MainBlock -> '{' DeclarationList CommandList . '}'    (rule 12)
	CommandList -> CommandList . Command                (rule 23)

	'}'            shift, and enter state 60
	'if'           shift, and enter state 26
	'while'        shift, and enter state 27
	'read'         shift, and enter state 28
	'print'        shift, and enter state 29
	'return'       shift, and enter state 30
	Name           shift, and enter state 31

	Command        goto state 54
	Return         goto state 18
	IfCommand      goto state 19
	WhileCommand   goto state 20
	AttribCommand  goto state 21
	WriteCommand   goto state 22
	ReadCommand    goto state 23
	ProcCall       goto state 24
	FunctionCall   goto state 25

State 60

	MainBlock -> '{' DeclarationList CommandList '}' .    (rule 12)

	'{'            reduce using rule 12
	'int'          reduce using rule 12
	'double'       reduce using rule 12
	'string'       reduce using rule 12
	'void'         reduce using rule 12
	%eof           reduce using rule 12


State 61

	NameList -> NameList ',' . Name                     (rule 20)

	Name           shift, and enter state 121


State 62

	Declaration -> Tipo NameList ';' .                  (rule 16)

	'if'           reduce using rule 16
	'while'        reduce using rule 16
	'read'         reduce using rule 16
	'print'        reduce using rule 16
	'return'       reduce using rule 16
	'int'          reduce using rule 16
	'double'       reduce using rule 16
	'string'       reduce using rule 16
	Name           reduce using rule 16


State 63

	IfCommand -> 'if' '(' LogicalExpr . ')' Block       (rule 35)
	IfCommand -> 'if' '(' LogicalExpr . ')' Block 'else' Block    (rule 36)
	LogicalExpr -> LogicalExpr . '||' LogicalTerm       (rule 50)
	LogicalExpr -> LogicalExpr . '&&' LogicalTerm       (rule 51)

	')'            shift, and enter state 120
	'&&'           shift, and enter state 109
	'||'           shift, and enter state 110


State 64

	LogicalExpr -> LogicalTerm .                        (rule 52)

	')'            reduce using rule 52
	'&&'           reduce using rule 52
	'||'           reduce using rule 52


State 65

	LogicalTerm -> LogicalFactor .                      (rule 53)

	')'            reduce using rule 53
	'&&'           reduce using rule 53
	'||'           reduce using rule 53


State 66

	LogicalFactor -> RelationalExpr .                   (rule 56)

	')'            reduce using rule 56
	'&&'           reduce using rule 56
	'||'           reduce using rule 56


State 67

	RelationalExpr -> AritExpr . '>' AritExpr           (rule 57)
	RelationalExpr -> AritExpr . '>=' AritExpr          (rule 58)
	RelationalExpr -> AritExpr . '<' AritExpr           (rule 59)
	RelationalExpr -> AritExpr . '<=' AritExpr          (rule 60)
	RelationalExpr -> AritExpr . '==' AritExpr          (rule 61)
	RelationalExpr -> AritExpr . '!=' AritExpr          (rule 62)
	AritExpr -> AritExpr . '+' Term                     (rule 63)
	AritExpr -> AritExpr . '-' Term                     (rule 64)

	'+'            shift, and enter state 79
	'-'            shift, and enter state 80
	'>'            shift, and enter state 114
	'>='           shift, and enter state 115
	'<'            shift, and enter state 116
	'<='           shift, and enter state 117
	'=='           shift, and enter state 118
	'!='           shift, and enter state 119


State 68

	LogicalFactor -> '(' . LogicalExpr ')'              (rule 55)
	Factor -> '(' . AritExpr ')'                        (rule 73)

	'-'            shift, and enter state 42
	'('            shift, and enter state 68
	'!'            shift, and enter state 69
	Int            shift, and enter state 45
	Double         shift, and enter state 46
	Name           shift, and enter state 48

	FunctionCall   goto state 38
	LogicalExpr    goto state 112
	LogicalTerm    goto state 64
	LogicalFactor  goto state 65
	RelationalExpr goto state 66
	AritExpr       goto state 113
	Term           goto state 40
	Factor         goto state 41

State 69

	LogicalTerm -> '!' . LogicalTerm                    (rule 54)

	'-'            shift, and enter state 42
	'('            shift, and enter state 68
	'!'            shift, and enter state 69
	Int            shift, and enter state 45
	Double         shift, and enter state 46
	Name           shift, and enter state 48

	FunctionCall   goto state 38
	LogicalTerm    goto state 111
	LogicalFactor  goto state 65
	RelationalExpr goto state 66
	AritExpr       goto state 67
	Term           goto state 40
	Factor         goto state 41

State 70

	WhileCommand -> 'while' '(' LogicalExpr . ')' Block    (rule 37)
	LogicalExpr -> LogicalExpr . '||' LogicalTerm       (rule 50)
	LogicalExpr -> LogicalExpr . '&&' LogicalTerm       (rule 51)

	')'            shift, and enter state 108
	'&&'           shift, and enter state 109
	'||'           shift, and enter state 110


State 71

	ReadCommand -> 'read' '(' Name . ')' ';'            (rule 42)

	')'            shift, and enter state 107


State 72

	WriteCommand -> 'print' '(' AritExpr . ')' ';'      (rule 40)
	AritExpr -> AritExpr . '+' Term                     (rule 63)
	AritExpr -> AritExpr . '-' Term                     (rule 64)

	'+'            shift, and enter state 79
	'-'            shift, and enter state 80
	')'            shift, and enter state 106


State 73

	WriteCommand -> 'print' '(' Literal . ')' ';'       (rule 41)

	')'            shift, and enter state 105


State 74

	Return -> 'return' Literal ';' .                    (rule 33)

	'}'            reduce using rule 33
	'if'           reduce using rule 33
	'while'        reduce using rule 33
	'read'         reduce using rule 33
	'print'        reduce using rule 33
	'return'       reduce using rule 33
	Name           reduce using rule 33


State 75

	AritExpr -> AritExpr . '+' Term                     (rule 63)
	AritExpr -> AritExpr . '-' Term                     (rule 64)
	Factor -> '(' AritExpr . ')'                        (rule 73)

	'+'            shift, and enter state 79
	'-'            shift, and enter state 80
	')'            shift, and enter state 104


State 76

	Factor -> '-' Factor .                              (rule 74)

	'+'            reduce using rule 74
	'-'            reduce using rule 74
	'*'            reduce using rule 74
	'/'            reduce using rule 74
	')'            reduce using rule 74
	'&&'           reduce using rule 74
	'||'           reduce using rule 74
	'>'            reduce using rule 74
	'>='           reduce using rule 74
	'<'            reduce using rule 74
	'<='           reduce using rule 74
	'=='           reduce using rule 74
	'!='           reduce using rule 74
	','            reduce using rule 74
	';'            reduce using rule 74


State 77

	Term -> Term '*' . Factor                           (rule 66)

	'-'            shift, and enter state 42
	'('            shift, and enter state 43
	Int            shift, and enter state 45
	Double         shift, and enter state 46
	Name           shift, and enter state 48

	FunctionCall   goto state 38
	Factor         goto state 103

State 78

	Term -> Term '/' . Factor                           (rule 67)

	'-'            shift, and enter state 42
	'('            shift, and enter state 43
	Int            shift, and enter state 45
	Double         shift, and enter state 46
	Name           shift, and enter state 48

	FunctionCall   goto state 38
	Factor         goto state 102

State 79

	AritExpr -> AritExpr '+' . Term                     (rule 63)

	'-'            shift, and enter state 42
	'('            shift, and enter state 43
	Int            shift, and enter state 45
	Double         shift, and enter state 46
	Name           shift, and enter state 48

	FunctionCall   goto state 38
	Term           goto state 101
	Factor         goto state 41

State 80

	AritExpr -> AritExpr '-' . Term                     (rule 64)

	'-'            shift, and enter state 42
	'('            shift, and enter state 43
	Int            shift, and enter state 45
	Double         shift, and enter state 46
	Name           shift, and enter state 48

	FunctionCall   goto state 38
	Term           goto state 100
	Factor         goto state 41

State 81

	Return -> 'return' AritExpr ';' .                   (rule 32)

	'}'            reduce using rule 32
	'if'           reduce using rule 32
	'while'        reduce using rule 32
	'read'         reduce using rule 32
	'print'        reduce using rule 32
	'return'       reduce using rule 32
	Name           reduce using rule 32


State 82

	AttribCommand -> Name '=' AritExpr . ';'            (rule 38)
	AritExpr -> AritExpr . '+' Term                     (rule 63)
	AritExpr -> AritExpr . '-' Term                     (rule 64)

	'+'            shift, and enter state 79
	'-'            shift, and enter state 80
	';'            shift, and enter state 99


State 83

	AttribCommand -> Name '=' Literal . ';'             (rule 39)

	';'            shift, and enter state 98


State 84

	FunctionCall -> Name '(' FunctionParameterList . ')'    (rule 44)
	FunctionParameterList -> FunctionParameterList . ',' AritExpr    (rule 46)
	FunctionParameterList -> FunctionParameterList . ',' Literal    (rule 48)

	')'            shift, and enter state 96
	','            shift, and enter state 97


State 85

	FunctionParameterList -> AritExpr .                 (rule 47)
	AritExpr -> AritExpr . '+' Term                     (rule 63)
	AritExpr -> AritExpr . '-' Term                     (rule 64)

	'+'            shift, and enter state 79
	'-'            shift, and enter state 80
	')'            reduce using rule 47
	','            reduce using rule 47


State 86

	FunctionCall -> Name '(' ')' .                      (rule 45)

	'+'            reduce using rule 45
	'-'            reduce using rule 45
	'*'            reduce using rule 45
	'/'            reduce using rule 45
	')'            reduce using rule 45
	'&&'           reduce using rule 45
	'||'           reduce using rule 45
	'>'            reduce using rule 45
	'>='           reduce using rule 45
	'<'            reduce using rule 45
	'<='           reduce using rule 45
	'=='           reduce using rule 45
	'!='           reduce using rule 45
	','            reduce using rule 45
	';'            reduce using rule 45


State 87

	FunctionParameterList -> Literal .                  (rule 49)

	')'            reduce using rule 49
	','            reduce using rule 49


State 88

	Function -> ReturnType Name '(' DeclParameterList . ')' MainBlock    (rule 5)
	DeclParameterList -> DeclParameterList . ',' DeclParameter    (rule 9)

	')'            shift, and enter state 94
	','            shift, and enter state 95


State 89

	DeclParameterList -> DeclParameter .                (rule 10)

	')'            reduce using rule 10
	','            reduce using rule 10


State 90

	DeclParameter -> Tipo . Name                        (rule 11)

	Name           shift, and enter state 93


State 91

	Function -> ReturnType Name '(' ')' . MainBlock     (rule 6)

	'{'            shift, and enter state 12

	MainBlock      goto state 92

State 92

	Function -> ReturnType Name '(' ')' MainBlock .     (rule 6)

	'{'            reduce using rule 6
	'int'          reduce using rule 6
	'double'       reduce using rule 6
	'string'       reduce using rule 6
	'void'         reduce using rule 6


State 93

	DeclParameter -> Tipo Name .                        (rule 11)

	')'            reduce using rule 11
	','            reduce using rule 11


State 94

	Function -> ReturnType Name '(' DeclParameterList ')' . MainBlock    (rule 5)

	'{'            shift, and enter state 12

	MainBlock      goto state 140

State 95

	DeclParameterList -> DeclParameterList ',' . DeclParameter    (rule 9)

	'int'          shift, and enter state 6
	'double'       shift, and enter state 7
	'string'       shift, and enter state 8

	DeclParameter  goto state 139
	Tipo           goto state 90

State 96

	FunctionCall -> Name '(' FunctionParameterList ')' .    (rule 44)

	'+'            reduce using rule 44
	'-'            reduce using rule 44
	'*'            reduce using rule 44
	'/'            reduce using rule 44
	')'            reduce using rule 44
	'&&'           reduce using rule 44
	'||'           reduce using rule 44
	'>'            reduce using rule 44
	'>='           reduce using rule 44
	'<'            reduce using rule 44
	'<='           reduce using rule 44
	'=='           reduce using rule 44
	'!='           reduce using rule 44
	','            reduce using rule 44
	';'            reduce using rule 44


State 97

	FunctionParameterList -> FunctionParameterList ',' . AritExpr    (rule 46)
	FunctionParameterList -> FunctionParameterList ',' . Literal    (rule 48)

	'-'            shift, and enter state 42
	'('            shift, and enter state 43
	Int            shift, and enter state 45
	Double         shift, and enter state 46
	Literal        shift, and enter state 138
	Name           shift, and enter state 48

	FunctionCall   goto state 38
	AritExpr       goto state 137
	Term           goto state 40
	Factor         goto state 41

State 98

	AttribCommand -> Name '=' Literal ';' .             (rule 39)

	'}'            reduce using rule 39
	'if'           reduce using rule 39
	'while'        reduce using rule 39
	'read'         reduce using rule 39
	'print'        reduce using rule 39
	'return'       reduce using rule 39
	Name           reduce using rule 39


State 99

	AttribCommand -> Name '=' AritExpr ';' .            (rule 38)

	'}'            reduce using rule 38
	'if'           reduce using rule 38
	'while'        reduce using rule 38
	'read'         reduce using rule 38
	'print'        reduce using rule 38
	'return'       reduce using rule 38
	Name           reduce using rule 38


State 100

	AritExpr -> AritExpr '-' Term .                     (rule 64)
	Term -> Term . '*' Factor                           (rule 66)
	Term -> Term . '/' Factor                           (rule 67)

	'+'            reduce using rule 64
	'-'            reduce using rule 64
	'*'            shift, and enter state 77
	'/'            shift, and enter state 78
	')'            reduce using rule 64
	'&&'           reduce using rule 64
	'||'           reduce using rule 64
	'>'            reduce using rule 64
	'>='           reduce using rule 64
	'<'            reduce using rule 64
	'<='           reduce using rule 64
	'=='           reduce using rule 64
	'!='           reduce using rule 64
	','            reduce using rule 64
	';'            reduce using rule 64


State 101

	AritExpr -> AritExpr '+' Term .                     (rule 63)
	Term -> Term . '*' Factor                           (rule 66)
	Term -> Term . '/' Factor                           (rule 67)

	'+'            reduce using rule 63
	'-'            reduce using rule 63
	'*'            shift, and enter state 77
	'/'            shift, and enter state 78
	')'            reduce using rule 63
	'&&'           reduce using rule 63
	'||'           reduce using rule 63
	'>'            reduce using rule 63
	'>='           reduce using rule 63
	'<'            reduce using rule 63
	'<='           reduce using rule 63
	'=='           reduce using rule 63
	'!='           reduce using rule 63
	','            reduce using rule 63
	';'            reduce using rule 63


State 102

	Term -> Term '/' Factor .                           (rule 67)

	'+'            reduce using rule 67
	'-'            reduce using rule 67
	'*'            reduce using rule 67
	'/'            reduce using rule 67
	')'            reduce using rule 67
	'&&'           reduce using rule 67
	'||'           reduce using rule 67
	'>'            reduce using rule 67
	'>='           reduce using rule 67
	'<'            reduce using rule 67
	'<='           reduce using rule 67
	'=='           reduce using rule 67
	'!='           reduce using rule 67
	','            reduce using rule 67
	';'            reduce using rule 67


State 103

	Term -> Term '*' Factor .                           (rule 66)

	'+'            reduce using rule 66
	'-'            reduce using rule 66
	'*'            reduce using rule 66
	'/'            reduce using rule 66
	')'            reduce using rule 66
	'&&'           reduce using rule 66
	'||'           reduce using rule 66
	'>'            reduce using rule 66
	'>='           reduce using rule 66
	'<'            reduce using rule 66
	'<='           reduce using rule 66
	'=='           reduce using rule 66
	'!='           reduce using rule 66
	','            reduce using rule 66
	';'            reduce using rule 66


State 104

	Factor -> '(' AritExpr ')' .                        (rule 73)

	'+'            reduce using rule 73
	'-'            reduce using rule 73
	'*'            reduce using rule 73
	'/'            reduce using rule 73
	')'            reduce using rule 73
	'&&'           reduce using rule 73
	'||'           reduce using rule 73
	'>'            reduce using rule 73
	'>='           reduce using rule 73
	'<'            reduce using rule 73
	'<='           reduce using rule 73
	'=='           reduce using rule 73
	'!='           reduce using rule 73
	','            reduce using rule 73
	';'            reduce using rule 73


State 105

	WriteCommand -> 'print' '(' Literal ')' . ';'       (rule 41)

	';'            shift, and enter state 136


State 106

	WriteCommand -> 'print' '(' AritExpr ')' . ';'      (rule 40)

	';'            shift, and enter state 135


State 107

	ReadCommand -> 'read' '(' Name ')' . ';'            (rule 42)

	';'            shift, and enter state 134


State 108

	WhileCommand -> 'while' '(' LogicalExpr ')' . Block    (rule 37)

	'{'            shift, and enter state 123

	Block          goto state 133

State 109

	LogicalExpr -> LogicalExpr '&&' . LogicalTerm       (rule 51)

	'-'            shift, and enter state 42
	'('            shift, and enter state 68
	'!'            shift, and enter state 69
	Int            shift, and enter state 45
	Double         shift, and enter state 46
	Name           shift, and enter state 48

	FunctionCall   goto state 38
	LogicalTerm    goto state 132
	LogicalFactor  goto state 65
	RelationalExpr goto state 66
	AritExpr       goto state 67
	Term           goto state 40
	Factor         goto state 41

State 110

	LogicalExpr -> LogicalExpr '||' . LogicalTerm       (rule 50)

	'-'            shift, and enter state 42
	'('            shift, and enter state 68
	'!'            shift, and enter state 69
	Int            shift, and enter state 45
	Double         shift, and enter state 46
	Name           shift, and enter state 48

	FunctionCall   goto state 38
	LogicalTerm    goto state 131
	LogicalFactor  goto state 65
	RelationalExpr goto state 66
	AritExpr       goto state 67
	Term           goto state 40
	Factor         goto state 41

State 111

	LogicalTerm -> '!' LogicalTerm .                    (rule 54)

	')'            reduce using rule 54
	'&&'           reduce using rule 54
	'||'           reduce using rule 54


State 112

	LogicalExpr -> LogicalExpr . '||' LogicalTerm       (rule 50)
	LogicalExpr -> LogicalExpr . '&&' LogicalTerm       (rule 51)
	LogicalFactor -> '(' LogicalExpr . ')'              (rule 55)

	')'            shift, and enter state 130
	'&&'           shift, and enter state 109
	'||'           shift, and enter state 110


State 113

	RelationalExpr -> AritExpr . '>' AritExpr           (rule 57)
	RelationalExpr -> AritExpr . '>=' AritExpr          (rule 58)
	RelationalExpr -> AritExpr . '<' AritExpr           (rule 59)
	RelationalExpr -> AritExpr . '<=' AritExpr          (rule 60)
	RelationalExpr -> AritExpr . '==' AritExpr          (rule 61)
	RelationalExpr -> AritExpr . '!=' AritExpr          (rule 62)
	AritExpr -> AritExpr . '+' Term                     (rule 63)
	AritExpr -> AritExpr . '-' Term                     (rule 64)
	Factor -> '(' AritExpr . ')'                        (rule 73)

	'+'            shift, and enter state 79
	'-'            shift, and enter state 80
	')'            shift, and enter state 104
	'>'            shift, and enter state 114
	'>='           shift, and enter state 115
	'<'            shift, and enter state 116
	'<='           shift, and enter state 117
	'=='           shift, and enter state 118
	'!='           shift, and enter state 119


State 114

	RelationalExpr -> AritExpr '>' . AritExpr           (rule 57)

	'-'            shift, and enter state 42
	'('            shift, and enter state 43
	Int            shift, and enter state 45
	Double         shift, and enter state 46
	Name           shift, and enter state 48

	FunctionCall   goto state 38
	AritExpr       goto state 129
	Term           goto state 40
	Factor         goto state 41

State 115

	RelationalExpr -> AritExpr '>=' . AritExpr          (rule 58)

	'-'            shift, and enter state 42
	'('            shift, and enter state 43
	Int            shift, and enter state 45
	Double         shift, and enter state 46
	Name           shift, and enter state 48

	FunctionCall   goto state 38
	AritExpr       goto state 128
	Term           goto state 40
	Factor         goto state 41

State 116

	RelationalExpr -> AritExpr '<' . AritExpr           (rule 59)

	'-'            shift, and enter state 42
	'('            shift, and enter state 43
	Int            shift, and enter state 45
	Double         shift, and enter state 46
	Name           shift, and enter state 48

	FunctionCall   goto state 38
	AritExpr       goto state 127
	Term           goto state 40
	Factor         goto state 41

State 117

	RelationalExpr -> AritExpr '<=' . AritExpr          (rule 60)

	'-'            shift, and enter state 42
	'('            shift, and enter state 43
	Int            shift, and enter state 45
	Double         shift, and enter state 46
	Name           shift, and enter state 48

	FunctionCall   goto state 38
	AritExpr       goto state 126
	Term           goto state 40
	Factor         goto state 41

State 118

	RelationalExpr -> AritExpr '==' . AritExpr          (rule 61)

	'-'            shift, and enter state 42
	'('            shift, and enter state 43
	Int            shift, and enter state 45
	Double         shift, and enter state 46
	Name           shift, and enter state 48

	FunctionCall   goto state 38
	AritExpr       goto state 125
	Term           goto state 40
	Factor         goto state 41

State 119

	RelationalExpr -> AritExpr '!=' . AritExpr          (rule 62)

	'-'            shift, and enter state 42
	'('            shift, and enter state 43
	Int            shift, and enter state 45
	Double         shift, and enter state 46
	Name           shift, and enter state 48

	FunctionCall   goto state 38
	AritExpr       goto state 124
	Term           goto state 40
	Factor         goto state 41

State 120

	IfCommand -> 'if' '(' LogicalExpr ')' . Block       (rule 35)
	IfCommand -> 'if' '(' LogicalExpr ')' . Block 'else' Block    (rule 36)

	'{'            shift, and enter state 123

	Block          goto state 122

State 121

	NameList -> NameList ',' Name .                     (rule 20)

	','            reduce using rule 20
	';'            reduce using rule 20


State 122

	IfCommand -> 'if' '(' LogicalExpr ')' Block .       (rule 35)
	IfCommand -> 'if' '(' LogicalExpr ')' Block . 'else' Block    (rule 36)

	'}'            reduce using rule 35
	'if'           reduce using rule 35
	'else'         shift, and enter state 142
	'while'        reduce using rule 35
	'read'         reduce using rule 35
	'print'        reduce using rule 35
	'return'       reduce using rule 35
	Name           reduce using rule 35


State 123

	Block -> '{' . CommandList '}'                      (rule 22)

	'if'           shift, and enter state 26
	'while'        shift, and enter state 27
	'read'         shift, and enter state 28
	'print'        shift, and enter state 29
	'return'       shift, and enter state 30
	Name           shift, and enter state 31

	CommandList    goto state 141
	Command        goto state 17
	Return         goto state 18
	IfCommand      goto state 19
	WhileCommand   goto state 20
	AttribCommand  goto state 21
	WriteCommand   goto state 22
	ReadCommand    goto state 23
	ProcCall       goto state 24
	FunctionCall   goto state 25

State 124

	RelationalExpr -> AritExpr '!=' AritExpr .          (rule 62)
	AritExpr -> AritExpr . '+' Term                     (rule 63)
	AritExpr -> AritExpr . '-' Term                     (rule 64)

	'+'            shift, and enter state 79
	'-'            shift, and enter state 80
	')'            reduce using rule 62
	'&&'           reduce using rule 62
	'||'           reduce using rule 62


State 125

	RelationalExpr -> AritExpr '==' AritExpr .          (rule 61)
	AritExpr -> AritExpr . '+' Term                     (rule 63)
	AritExpr -> AritExpr . '-' Term                     (rule 64)

	'+'            shift, and enter state 79
	'-'            shift, and enter state 80
	')'            reduce using rule 61
	'&&'           reduce using rule 61
	'||'           reduce using rule 61


State 126

	RelationalExpr -> AritExpr '<=' AritExpr .          (rule 60)
	AritExpr -> AritExpr . '+' Term                     (rule 63)
	AritExpr -> AritExpr . '-' Term                     (rule 64)

	'+'            shift, and enter state 79
	'-'            shift, and enter state 80
	')'            reduce using rule 60
	'&&'           reduce using rule 60
	'||'           reduce using rule 60


State 127

	RelationalExpr -> AritExpr '<' AritExpr .           (rule 59)
	AritExpr -> AritExpr . '+' Term                     (rule 63)
	AritExpr -> AritExpr . '-' Term                     (rule 64)

	'+'            shift, and enter state 79
	'-'            shift, and enter state 80
	')'            reduce using rule 59
	'&&'           reduce using rule 59
	'||'           reduce using rule 59


State 128

	RelationalExpr -> AritExpr '>=' AritExpr .          (rule 58)
	AritExpr -> AritExpr . '+' Term                     (rule 63)
	AritExpr -> AritExpr . '-' Term                     (rule 64)

	'+'            shift, and enter state 79
	'-'            shift, and enter state 80
	')'            reduce using rule 58
	'&&'           reduce using rule 58
	'||'           reduce using rule 58


State 129

	RelationalExpr -> AritExpr '>' AritExpr .           (rule 57)
	AritExpr -> AritExpr . '+' Term                     (rule 63)
	AritExpr -> AritExpr . '-' Term                     (rule 64)

	'+'            shift, and enter state 79
	'-'            shift, and enter state 80
	')'            reduce using rule 57
	'&&'           reduce using rule 57
	'||'           reduce using rule 57


State 130

	LogicalFactor -> '(' LogicalExpr ')' .              (rule 55)

	')'            reduce using rule 55
	'&&'           reduce using rule 55
	'||'           reduce using rule 55


State 131

	LogicalExpr -> LogicalExpr '||' LogicalTerm .       (rule 50)

	')'            reduce using rule 50
	'&&'           reduce using rule 50
	'||'           reduce using rule 50


State 132

	LogicalExpr -> LogicalExpr '&&' LogicalTerm .       (rule 51)

	')'            reduce using rule 51
	'&&'           reduce using rule 51
	'||'           reduce using rule 51


State 133

	WhileCommand -> 'while' '(' LogicalExpr ')' Block .    (rule 37)

	'}'            reduce using rule 37
	'if'           reduce using rule 37
	'while'        reduce using rule 37
	'read'         reduce using rule 37
	'print'        reduce using rule 37
	'return'       reduce using rule 37
	Name           reduce using rule 37


State 134

	ReadCommand -> 'read' '(' Name ')' ';' .            (rule 42)

	'}'            reduce using rule 42
	'if'           reduce using rule 42
	'while'        reduce using rule 42
	'read'         reduce using rule 42
	'print'        reduce using rule 42
	'return'       reduce using rule 42
	Name           reduce using rule 42


State 135

	WriteCommand -> 'print' '(' AritExpr ')' ';' .      (rule 40)

	'}'            reduce using rule 40
	'if'           reduce using rule 40
	'while'        reduce using rule 40
	'read'         reduce using rule 40
	'print'        reduce using rule 40
	'return'       reduce using rule 40
	Name           reduce using rule 40


State 136

	WriteCommand -> 'print' '(' Literal ')' ';' .       (rule 41)

	'}'            reduce using rule 41
	'if'           reduce using rule 41
	'while'        reduce using rule 41
	'read'         reduce using rule 41
	'print'        reduce using rule 41
	'return'       reduce using rule 41
	Name           reduce using rule 41


State 137

	FunctionParameterList -> FunctionParameterList ',' AritExpr .    (rule 46)
	AritExpr -> AritExpr . '+' Term                     (rule 63)
	AritExpr -> AritExpr . '-' Term                     (rule 64)

	'+'            shift, and enter state 79
	'-'            shift, and enter state 80
	')'            reduce using rule 46
	','            reduce using rule 46


State 138

	FunctionParameterList -> FunctionParameterList ',' Literal .    (rule 48)

	')'            reduce using rule 48
	','            reduce using rule 48


State 139

	DeclParameterList -> DeclParameterList ',' DeclParameter .    (rule 9)

	')'            reduce using rule 9
	','            reduce using rule 9


State 140

	Function -> ReturnType Name '(' DeclParameterList ')' MainBlock .    (rule 5)

	'{'            reduce using rule 5
	'int'          reduce using rule 5
	'double'       reduce using rule 5
	'string'       reduce using rule 5
	'void'         reduce using rule 5


State 141

	Block -> '{' CommandList . '}'                      (rule 22)
	CommandList -> CommandList . Command                (rule 23)

	'}'            shift, and enter state 144
	'if'           shift, and enter state 26
	'while'        shift, and enter state 27
	'read'         shift, and enter state 28
	'print'        shift, and enter state 29
	'return'       shift, and enter state 30
	Name           shift, and enter state 31

	Command        goto state 54
	Return         goto state 18
	IfCommand      goto state 19
	WhileCommand   goto state 20
	AttribCommand  goto state 21
	WriteCommand   goto state 22
	ReadCommand    goto state 23
	ProcCall       goto state 24
	FunctionCall   goto state 25

State 142

	IfCommand -> 'if' '(' LogicalExpr ')' Block 'else' . Block    (rule 36)

	'{'            shift, and enter state 123

	Block          goto state 143

State 143

	IfCommand -> 'if' '(' LogicalExpr ')' Block 'else' Block .    (rule 36)

	'}'            reduce using rule 36
	'if'           reduce using rule 36
	'while'        reduce using rule 36
	'read'         reduce using rule 36
	'print'        reduce using rule 36
	'return'       reduce using rule 36
	Name           reduce using rule 36


State 144

	Block -> '{' CommandList '}' .                      (rule 22)

	'}'            reduce using rule 22
	'if'           reduce using rule 22
	'else'         reduce using rule 22
	'while'        reduce using rule 22
	'read'         reduce using rule 22
	'print'        reduce using rule 22
	'return'       reduce using rule 22
	Name           reduce using rule 22


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 75
Number of terminals: 34
Number of non-terminals: 31
Number of states: 145
